
(defwindow bar
	   :monitor 0
	   :geometry (geometry :x "0%"
			       :y "0px"
			       :height "10px"
			       :width "100%"
			       :anchor "top center")
	   :stacking "fg"
	   :reserve (struts :distance "15px" :anchor "top")
	   :windowtype "dock"
	   :exclusive true
	   :namespace "bar"
	   :wm-ignore false
	   (bar))
(defwidget bar []
	   (centerbox :orientation "h"
		      (leftside)
		      (middle)
		      (rightside)))
(defwidget rightside []
	   (box :orientation "h"
		:halign "end"
		:space-evenly false
		(box :class "info"
		 (label :text "â™ª ${volume}"))
		(box :class "info"
		    (label :text "âš¡ ${EWW_BATTERY.BAT0.capacity}%"))
		(box :class "info"
		    (label :text "ðŸ’» ${round(EWW_CPU.avg, 0)}%"))
		(box :class "info"
		    (label :text "ðŸ§  ${round(EWW_RAM.used_mem_perc, 0)}%"))
		(systray
			 :orientation "h"
			 :icon-size 10)
		))
(defwidget middle []
	    (label :class "date" :text time))
(defwidget leftside []
	   (box
	    :orientation "h"
	   (workspaces)))

(defwidget metric [label value onchange]
	   (box :orientation "h"
		:class "metric"
		:space-evenly false
		(box :class "label" label)
		(scale :min 0
		       :max 101
		       :active {onchange != ""}
		       :value value
		       :onchange onchange)))


(defpoll time :interval "5s"
	 :initial "The End of The World"
	 "date +'%I:%M %p - %d %B'"
)
(deflisten volume :initial "100%" "bash ~/.config/eww/scripts/volumePerc.sh ")
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
	    (box :space-evenly true
		 :halign "start"
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (button :class " workspaces ${workspace.windows > 0 ? "occupied" : "empty"} workspace-entry"
            (label :text "${workspace.id}" :class " ${workspace.windows > 0 ? "occupied" : ""} ${workspace.id == current_workspace ? "active" : ""} workspace-entry " )
            )
          )
        )
      )
    )
  )
